{"version":3,"file":"static/js/386.7829b935.chunk.js","mappings":"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","sources":["../node_modules/uuid/dist/esm-browser/rng.js","webpack://managetask/./src/components/manageTask/task.module.css?09e2","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","components/manageTask/CreateTask.js","components/manageTask/editTask/EditTask.js","components/manageTask/TaskList.js","components/manageTask/Task.js"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","// extracted by mini-css-extract-plugin\nexport default {\"Main_container\":\"task_Main_container__-gBSs\",\"container\":\"task_container__K6h44\",\"task_list\":\"task_task_list__ggWHK\",\"create_task_container\":\"task_create_task_container__FCXp0\",\"show\":\"task_show__aP3Xu\",\"statusPending\":\"task_statusPending__TRAl3\",\"statusDone\":\"task_statusDone__wNunr\",\"task_form\":\"task_task_form__H0sjL\",\"user_list\":\"task_user_list__Flhgj\",\"user_name\":\"task_user_name__LXZnJ\",\"user_actions\":\"task_user_actions__o1Wwc\",\"error\":\"task_error__cvAYr\",\"edit_form\":\"task_edit_form__qNhoj\",\"edit_task_overlay\":\"task_edit_task_overlay__jY5h7\",\"close_button\":\"task_close_button__GYOtS\"};","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import React, { useState } from \"react\";\r\nimport classes from \"./task.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createTask } from \"../../redux/action/actions\";\r\n\r\nexport default function CreateTask() {\r\n  const dispatch = useDispatch();\r\n  const showError = useSelector((state) => state.tasks.error);\r\n  const [values, setValues] = useState({ name: \"\", detail: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // handle onChange event\r\n  const handleChange = (evt) => {\r\n    const value = evt.target.value;\r\n    setValues({\r\n      ...values,\r\n      [evt.target.name]: value,\r\n    });\r\n    setError(\"\");\r\n  };\r\n\r\n  const handleSubmitTask = (event) => {\r\n    event.preventDefault();\r\n    if (!values.name || !values.detail) {\r\n      setError(\"Please fill in all fields\");\r\n    } else {\r\n      // submit form\r\n      dispatch(\r\n        createTask({\r\n          id: uuidv4(),\r\n          name: values.name,\r\n          detail: values.detail,\r\n        })\r\n      );\r\n      setError(\"\");\r\n      setValues({ name: \"\", detail: \"\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={classes.task_form} onSubmit={handleSubmitTask}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task Name...\"\r\n          name=\"name\"\r\n          maxLength={30}\r\n          onChange={handleChange}\r\n          value={values.name}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Details...\"\r\n          name=\"detail\"\r\n          maxLength={50}\r\n          onChange={handleChange}\r\n          value={values.detail}\r\n        />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n      {error && <div className={classes.error}>{error}</div>}\r\n      {showError && <div className={classes.error}>{showError}</div>}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport classes from \"../task.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { editTask } from \"../../../redux/action/actions\";\r\n\r\nexport default function EditTask({ setShow, rowData }) {\r\n  const dispatch = useDispatch();\r\n  const showError = useSelector((state) => state.tasks.error);\r\n  const [values, setValues] = useState({ name: \"\", detail: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (rowData) {\r\n      setValues({\r\n        name: rowData.name,\r\n        detail: rowData.detail,\r\n      });\r\n    }\r\n  }, [rowData]);\r\n\r\n  const handleChange = (evt) => {\r\n    const value = evt.target.value;\r\n    setValues({\r\n      ...values,\r\n      [evt.target.name]: value,\r\n    });\r\n    setError(\"\");\r\n  };\r\n\r\n  const handleSubmitTask = (event) => {\r\n    event.preventDefault();\r\n    if (!values.name || !values.detail) {\r\n      setError(\"Please fill in all fields\");\r\n    } else {\r\n      dispatch(\r\n        editTask({\r\n          id: rowData.id,\r\n          name: values.name,\r\n          detail: values.detail,\r\n        })\r\n      );\r\n      setError(\"\");\r\n      setValues({ name: \"\", detail: \"\" });\r\n      setShow(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.close_button} onClick={() => setShow(false)}>\r\n        X\r\n      </div>\r\n      <div className={classes.edit_form}>\r\n        <form className={classes.task_form} onSubmit={handleSubmitTask}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Task Name...\"\r\n            name=\"name\"\r\n            maxLength={30}\r\n            onChange={handleChange}\r\n            value={values.name}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Details...\"\r\n            name=\"detail\"\r\n            maxLength={50}\r\n            onChange={handleChange}\r\n            value={values.detail}\r\n          />\r\n          <button type=\"submit\">Update</button>\r\n        </form>\r\n        {error && <div className={classes.error}>{error}</div>}\r\n        {showError && <div className={classes.error}>{showError}</div>}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./task.module.css\";\r\nimport del from \"../../assets/delete.png\";\r\nimport edit from \"../../assets/edit.png\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteTask, editTask } from \"../../redux/action/actions\";\r\nimport EditTask from \"./editTask/EditTask\";\r\n\r\nexport default function TaskList() {\r\n  const taskList = useSelector((state) => state.tasks);\r\n  const dispatch = useDispatch();\r\n  const [show, setShow] = useState(false);\r\n  const [rowData, setRowData] = useState();\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch(deleteTask(id));\r\n  };\r\n\r\n  const handleEdit = (task) => {\r\n    setRowData(task);\r\n  };\r\n\r\n  const handleStatusChange = (id, status) => {\r\n    dispatch(editTask({ id, status }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ul className={classes.user_list}>\r\n        {taskList?.tasks?.map((el, _) => (\r\n          <li key={el.id}>\r\n            <span className={classes.user_name}>{el.name}</span>\r\n            <span\r\n              className={`${classes.user_name} ${\r\n                el.status === \"pending\"\r\n                  ? classes.statusPending\r\n                  : classes.statusDone\r\n              }`}\r\n            >\r\n              {el.status}\r\n            </span>\r\n            <div className={classes.user_actions}>\r\n              <button\r\n                onClick={() =>\r\n                  handleStatusChange(\r\n                    el.id,\r\n                    el.status === \"pending\" ? \"done\" : \"pending\"\r\n                  )\r\n                }\r\n              >\r\n                {el.status === \"pending\" ? \"Mark as Done\" : \"Mark as Pending\"}\r\n              </button>\r\n              <img src={del} onClick={() => handleDelete(el.id)} />\r\n              <img\r\n                src={edit}\r\n                onClick={() => {\r\n                  handleEdit(el);\r\n                  setShow(true);\r\n                }}\r\n              />\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {show ? (\r\n        <div className={classes.edit_task_overlay}>\r\n          <EditTask setShow={setShow} rowData={rowData} />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CreateTask from \"./CreateTask\";\r\nimport classes from \"./task.module.css\";\r\nimport TaskList from \"./TaskList\";\r\n\r\nexport default function Task() {\r\n  const [show, setShow] = useState(false);\r\n  const taskList = useSelector((state) => state.tasks);\r\n  return (\r\n    <>\r\n      <div className={classes.Main_container}>\r\n        <div className={classes.container}>\r\n          {/* create task */}\r\n          <div className={classes.add_task}>\r\n            <button onClick={() => setShow(!show)}>Create Task</button>\r\n            <div\r\n              className={`${classes.create_task_container} ${\r\n                show ? classes.show : \"\"\r\n              }`}\r\n            >\r\n              {show ? <CreateTask /> : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* task list */}\r\n        {taskList.tasks.length ? (\r\n          <>\r\n            <h2>Task List</h2>\r\n            <div className={classes.task_list}>\r\n              <TaskList />\r\n            </div>\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["getRandomValues","randomUUID","crypto","bind","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","arguments","length","undefined","toLowerCase","options","buf","native","rnds","random","CreateTask","dispatch","useDispatch","showError","useSelector","state","tasks","error","_useState","useState","name","detail","_useState2","_slicedToArray","values","setValues","_useState3","_useState4","setError","handleChange","evt","value","target","_objectSpread","_defineProperty","_jsxs","_Fragment","children","className","classes","onSubmit","event","preventDefault","createTask","id","uuidv4","_jsx","type","placeholder","maxLength","onChange","EditTask","_ref","setShow","rowData","useEffect","onClick","editTask","TaskList","_taskList$tasks","taskList","show","setRowData","map","el","_","concat","status","src","del","deleteTask","edit","Task"],"sourceRoot":""}